<?xml version="1.0"?>
<!-- This is setup to compare two lidar streams and output the transform between them -->
<launch>
  <arg name="namespace"                  default="sensor_alignment"/>
  <arg name="lidar_ns"                   default="lidar"/>
  
  <arg name="lidar_index"                             doc="Int: Lidar to be aligned"/>
  <arg name="lidar_index_main"           default="0"  doc="Int: Reference Lidar"/>

  <arg name="lidar_to_robot"             default="$(eval arg('lidar_index') == arg('lidar_index_main'))"/>

  <arg name="sensor_id"                  default="lidar_$(arg lidar_index)"/>

  <arg name="vehicle_config_path"        default="$(find erdc_vehicle)/vehicle"/>
  
  <arg name="env_name_short"             value="vehicle_lidar_$(arg lidar_index)_name_short"/>
  <arg name="name_short"                 default="$(eval optenv(env_name_short))"/>

  <arg name="env_type_index"             value="vehicle_lidar_$(arg lidar_index)_type"/>
  <arg name="lidar_type"                 default="$(eval optenv(env_type_index))"/>

  <arg name="name_long"                  default="$(arg lidar_type)_lidar_$(arg name_short)" />

     
  <arg name="alignment_file"             default="$(arg vehicle_config_path)/config/sensor_alignment/$(arg name_long)_joint_state.yaml" />
  <arg name="alignment_server"           default="/$(arg namespace)/$(arg sensor_id)/align_publisher"/>
  
  <arg name="output_frequency"           default="1.00" />

  <arg name="input_cloud0"               default="/$(arg lidar_ns)/cloud$(arg lidar_index_main)/points_filtered" />
  <arg name="input_cloud1"               default="/$(arg lidar_ns)/cloud$(arg lidar_index)/points_filtered" />
  <arg name="output_cloud0"              default="output_cloud0" />
  <arg name="output_cloud1"              default="output_cloud1" />
  
  <arg name="output"                     default="transform"/>
  
  <arg name="fixed_frame"                default="odom"/>
  <arg name="base_link_frame"            default="base_link"/>

  <arg name="is_output_filtered"         default="true"/>

  <arg name="method"                     default="3" doc="0=ICP Nonlinear with scaling CorDist, 1=ICP Nonlinear, 2=Normal Distributions Transform, 3=ICP with Normals"/>
  <arg name="epsilon"                    default="0.0001"/>
  <arg name="maxIterations"              default="1000"/>

  <arg name="norm/KSearch"               default="20"/>
  <arg name="norm/RadiusSearch"          default="0.5"/>
    
  <!-- Method 2 -->
  <arg name="ndt/StepSize"               default="0.001"/>
  <arg name="ndt/Resolution"             default="1"/>

  <!-- Filters -->
  <arg name="voxelSize"                  default="0"/>

  <arg name="range"                      default="20"/>
  <arg name="filter/i_min"               default="0.00"/> 
  <arg name="filter/i_max"               default="100"/>
  <arg name="filter/x_min"               default="-$(arg range)"/> 
  <arg name="filter/x_max"               default="+$(arg range)"/> 
  <arg name="filter/y_min"               default="-$(arg range)"/> 
  <arg name="filter/y_max"               default="+$(arg range)"/> 
  <arg name="filter/z_min"               default="-5"/> 
  <arg name="filter/z_max"               default="+5"/> 

  <arg name="rqt_reconfigure"            default="true"/>

  <group ns="$(arg namespace)/lidar_$(arg lidar_index)/icp_align_tool">
    <rosparam  command="load"  file="$(arg alignment_file)" unless="$(eval arg('alignment_file') == '')"/>

    <param name="alignment_server"                value="$(arg alignment_server)"/>

    <param name="output_frequency"                value="$(arg output_frequency)"/>

    <param name="output_cloud0"                   value="$(arg output_cloud0)" />
    <param name="output_cloud1"                   value="$(arg output_cloud1)" />
    <param name="output"                          value="$(arg output)" />
    <param name="is_output_filtered"              value="$(arg is_output_filtered)" />

    <param name="method"                          value="$(arg method)"/>          
    <param name="epsilon"                         value="$(arg epsilon)"/>    
    <param name="maxIterations"                   value="$(arg maxIterations)"/>    
    
    <!-- Methods 0, 1 and 3 -->
    <param name="norm/KSearch"                    value="$(arg norm/KSearch)"/>   
    <param name="norm/RadiusSearch"               value="$(arg norm/RadiusSearch)"/> 
    
    <!-- Method 2 -->
    <param name="ndt/StepSize"                    value="$(arg ndt/StepSize)"/>   
    <param name="ndt/Resolution"                  value="$(arg ndt/Resolution)"/>   

    <!-- Filters -->
    <param name="voxelSize"                       value="$(arg voxelSize)"/>   

    <param name="filter/i_min"                    value="$(arg filter/i_min)"/>   
    <param name="filter/i_max"                    value="$(arg filter/i_max)"/>   
    <param name="filter/x_min"                    value="$(arg filter/x_min)"/>   
    <param name="filter/x_max"                    value="$(arg filter/x_max)"/>   
    <param name="filter/y_min"                    value="$(arg filter/y_min)"/>   
    <param name="filter/y_max"                    value="$(arg filter/y_max)"/>   
    <param name="filter/z_min"                    value="$(arg filter/z_min)"/>   
    <param name="filter/z_max"                    value="$(arg filter/z_max)"/>   
  </group>

  <node if="$(arg lidar_to_robot)" 
        ns="$(arg namespace)/lidar_$(arg lidar_index)" name="icp_align_tool" pkg="multi_sensor_alignment" type="icp_align_tool_single" output="screen">
    
    <param name="fixed_frame"                     value="$(arg fixed_frame)"/>
    <param name="base_link_frame"                 value="$(arg base_link_frame)"/>

    <param name="input_cloud0"                    value="$(arg input_cloud0)" />
    <param name="input_cloud1"                    value="$(arg input_cloud0)" />

    <param name="buffer_size"                     value="1"/>
    <param name="maxCorrespondenceDistance"       value="0.5"/>   
  </node>
  
  <node unless="$(arg lidar_to_robot)" 
        ns="$(arg namespace)/lidar_$(arg lidar_index)" name="icp_align_tool" pkg="multi_sensor_alignment" type="icp_align_tool_double" output="screen">

      <param name="input_cloud0"                    value="$(arg input_cloud0)" />
      <param name="input_cloud1"                    value="$(arg input_cloud1)" />

      <param name="buffer_size"                     value="10"/>
      <param name="maxCorrespondenceDistance"       value="0.2"/>   
      </node>

  <node if="$(arg rqt_reconfigure)" name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure"/>


</launch>